// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");

function allQuestions() {
  var a = /* record */[
    /* id */"X",
    /* author */"X",
    /* created : None */0,
    /* opened : None */0,
    /* closed : None */0,
    /* priority : High */2,
    /* status : Pending */0,
    /* application : Breadcrumbs */0,
    /* assignee */"X",
    /* volume */"X"
  ];
  return /* :: */[
          a,
          /* :: */[
            a,
            /* [] */0
          ]
        ];
}

function allNodes() {
  var a = /* record */[
    /* id */"X",
    /* created : None */0,
    /* submitted : None */0,
    /* author */"X",
    /* volume */"X",
    /* coordinate : record */[
      /* x */1,
      /* y */2,
      /* z */3
    ],
    /* nodeType : Synapse */4
  ];
  return /* :: */[
          a,
          /* :: */[
            a,
            /* [] */0
          ]
        ];
}

function allEdges() {
  var a = /* record */[
    /* id */"X",
    /* created : None */0,
    /* submitted : None */0,
    /* author */"X",
    /* volume */"X",
    /* from */"X",
    /* to_ */"X"
  ];
  return /* :: */[
          a,
          /* :: */[
            a,
            /* [] */0
          ]
        ];
}

var DB = /* module */[
  /* allQuestions */allQuestions,
  /* allNodes */allNodes,
  /* allEdges */allEdges
];

function getUserQuestions(username) {
  return List.filter((function (a) {
                  return +(a[/* assignee */8] === username);
                }))(allQuestions(/* () */0));
}

function getGraphFromQuestionID(userID, volumeID) {
  var nodes = List.filter((function (node) {
            if (node[/* volume */4] === volumeID) {
              return +(node[/* author */3] === userID);
            } else {
              return /* false */0;
            }
          }))(allNodes(/* () */0));
  var edges = List.filter((function (edge) {
            if (edge[/* volume */4] === volumeID) {
              return +(edge[/* author */3] === userID);
            } else {
              return /* false */0;
            }
          }))(allEdges(/* () */0));
  return /* record */[
          /* nodes */nodes,
          /* edges */edges
        ];
}

exports.DB                     = DB;
exports.getUserQuestions       = getUserQuestions;
exports.getGraphFromQuestionID = getGraphFromQuestionID;
/* No side effect */
